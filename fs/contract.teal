#pragma version 5
txn ApplicationID
int 0
==
bnz main_l8
txn OnCompletion
int OptIn
==
bnz main_l7
txn OnCompletion
int UpdateApplication
==
bnz main_l6
int 1
bnz main_l5
err
main_l5:
int 0
int 0
byte "deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
callsub sub5
pop
int 0
int 8
int 32
callsub sub4
log
int 1
b main_l9
main_l6:
int 1
b main_l9
main_l7:
int 1
b main_l9
main_l8:
int 1
main_l9:
return
sub0: // intkey
store 7
load 7
itob
int 7
int 1
extract3
retsub
sub1: // safeSub
store 10
store 9
store 8
load 8
byte ""
==
bnz sub1_l4
load 8
len
load 10
<
bnz sub1_l3
load 8
load 9
load 10
substring3
b sub1_l5
sub1_l3:
load 8
load 9
load 8
len
substring3
b sub1_l5
sub1_l4:
byte ""
sub1_l5:
retsub
sub2: // safeExtract
store 24
store 23
store 22
load 23
load 24
+
load 22
len
>
bnz sub2_l2
load 22
load 23
load 24
extract3
b sub2_l3
sub2_l2:
load 22
load 23
load 22
len
load 23
-
extract3
sub2_l3:
retsub
sub3: // safeGet
store 12
store 11
load 11
int 0
load 12
app_local_get_ex
store 13
store 14
load 13
bnz sub3_l2
byte ""
b sub3_l3
sub3_l2:
load 14
sub3_l3:
retsub
sub4: // read
store 2
store 1
store 0
byte ""
store 4
load 1
int 127
/
store 3
sub4_l1:
load 3
load 2
int 127
/
<=
bz sub4_l9
load 3
load 1
int 127
/
==
bnz sub4_l8
int 0
sub4_l4:
store 5
load 3
load 2
int 127
/
==
bnz sub4_l7
int 127
sub4_l6:
store 6
load 4
load 0
load 3
callsub sub0
callsub sub3
load 5
load 6
callsub sub1
concat
store 4
load 3
int 1
+
store 3
b sub4_l1
sub4_l7:
load 2
int 127
%
b sub4_l6
sub4_l8:
load 1
int 127
%
b sub4_l4
sub4_l9:
load 4
retsub
sub5: // write
store 17
store 16
store 15
int 0
store 21
load 16
int 127
/
store 18
sub5_l1:
load 18
load 17
len
int 127
/
<=
bz sub5_l12
load 18
load 16
int 127
/
==
bnz sub5_l11
int 0
sub5_l4:
store 19
load 18
load 17
len
int 127
/
==
bnz sub5_l10
int 127
sub5_l6:
store 20
load 15
load 18
callsub sub0
load 20
load 19
-
int 127
<
bnz sub5_l9
load 17
load 21
int 127
callsub sub2
sub5_l8:
app_local_put
load 21
load 20
load 19
-
+
store 21
load 18
int 1
+
store 18
b sub5_l1
sub5_l9:
load 15
load 18
callsub sub0
callsub sub3
int 0
load 19
callsub sub1
load 17
load 21
load 21
load 20
load 19
-
+
callsub sub2
concat
load 15
load 18
callsub sub0
callsub sub3
load 20
int 127
callsub sub1
concat
b sub5_l8
sub5_l10:
load 17
len
int 127
%
b sub5_l6
sub5_l11:
load 16
int 127
%
b sub5_l4
sub5_l12:
load 21
retsub
